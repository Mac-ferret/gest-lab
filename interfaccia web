<!DOCTYPE html>
<html lang="it">
<head>
  <link rel="icon" type="image/x-icon" href="favicon.ico" />
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Gestione Fascicoli</title>
  <style>
    body {
      font-family: Georgia, 'Times New Roman', Times, serif, sans-serif;
      background-image: url("/splashscreen_gestionale.png");
      background-repeat: no-repeat;
      background-position: center;
      background-size: cover;
      background-color: #a2afef;
      margin: 0;
      padding: 20px;
    }
    h1, h2 {
      text-align: center;
    }
    .top-controls {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 10px;
      gap: 10px;
      flex-wrap: wrap;
    }
    .top-controls input[type="text"] {
      padding: 8px;
      flex: 1;
    }
    .top-controls button {
      padding: 8px 12px;
      font-weight: bold;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      background-color: #005fa3;
      color: white;
    }
    table {
      width: 100%;
      border-collapse: collapse;
      margin: 10px 0 20px;
      background-color: rgba(49, 227, 164, 0.9);
    }
    th, td {
      padding: 8px;
      border: 1px solid #40f075;
      text-align: left;
    }
    .stato-in-arrivo { background-color: rgba(19, 183, 237, 0.8); }
    .stato-in-lavorazione { background-color: rgba(240, 128, 128, 0.8); }
    .stato-chiuso { background-color: rgba(63, 241, 63, 0.8); }
    form {
      background: rgba(117, 153, 175, 0.95);
      padding: 20px;
      border: 1px solid #272525;
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 20px;
      border-radius: 10px;
    }
    form input, form select, form label {
      display: block;
      width: 100%;
    }
    form div {
      display: flex;
      flex-direction: column;
    }
    .checkbox-group {
      grid-column: 1 / -1;
      display: flex;
      justify-content: center;
      flex-wrap: wrap;
      gap: 20px;
      margin-top: 20px;
    }
    .checkbox-group label {
      display: grid;
      align-items: center;
      justify-content: center;
      gap: 8px;
      min-width: 100px;
      height: 40px;
      padding: 5px 12px;
      background-color: rgba(255, 255, 255, 0.25);
      border-radius: 10px;
      font-weight: bold;
      box-shadow: 1px 1px 4px rgba(0,0,0,0.1);
    }
    .form-actions {
      grid-column: 1 / -1;
      text-align: center;
    }
    button {
      padding: 10px 20px;
      font-weight: bold;
      background-color: #005fa3;
      color: white;
      border: none;
      border-radius: 8px;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <h1>Gestione Fascicoli</h1>

  <div class="top-controls">
    <input type="text" id="searchInput" placeholder="Cerca per numero, operatore o oggetto...">
    <button onclick="exportTable('csv')">Esporta CSV</button>
    <button onclick="exportTable('pdf')">Esporta PDF</button>
  </div>

  <table id="tabellaFascicoli">
    <thead>
      <tr>
        <th>Progressivo</th>
        <th>Numero</th>
        <th>Operatore</th>
        <th>Ufficio</th>
        <th>Oggetto</th>
        <th>Stato</th>
        <th>Date</th>
        <th>Reperti</th>
        <th>Supporti Acquisiti</th>
        <th>Azioni</th>
      </tr>
    </thead>
    <tbody></tbody>
  </table>

  <form id="fascicoloForm">
    <h2 id="formTitle" style="grid-column: 1 / -1;">Nuovo Fascicolo</h2>
    <input type="hidden" id="fascicoloId" />
    <div><label>Numero fascicolo<input type="text" id="numero" required /></label></div>
    <div><label>Operatore<input type="text" id="operatore" required /></label></div>
    <div><label>Ufficio richiedente<input type="text" id="ufficio" /></label></div>
    <div><label>Oggetto<input type="text" id="oggetto" /></label></div>
    <div><label>Stato<select id="stato">
      <option value="in arrivo">In arrivo</option>
      <option value="in lavorazione">In lavorazione</option>
      <option value="chiuso">Chiuso</option>
    </select></label></div>

    <div><label>üìå Data della richiesta<input type="date" id="data_arrivo" /></label></div>
    <div><label>üìÇ Data di apertura fascicolo<input type="date" id="data_apertura" /></label></div>
    <div><label>üì¶ Data di consegna reperti<input type="date" id="data_consegna" /></label></div>
    <div><label>üìù Data uscita relazione preliminare<input type="date" id="data_relazione_pre" /></label></div>
    <div><label>‚öôÔ∏è Data inizio operazioni<input type="date" id="data_relazione_tecnica" /></label></div>
    <div><label>üìÅ Data uscita relazione finale<input type="date" id="data_chiusura" /></label></div>

    <div><label>Reperti: Mobile<input type="number" id="reperti_mobile" /></label></div>
    <div><label>Reperti: SIM<input type="number" id="reperti_sim" /></label></div>
    <div><label>Reperti: Hard Disk<input type="number" id="reperti_hd" /></label></div>
    <div><label>Reperti: Memorie<input type="number" id="reperti_memorie" /></label></div>
    <div><label>Reperti: Drone<input type="number" id="reperti_drone" /></label></div>

    <div class="checkbox-group">
      <label><input type="checkbox" id="supporto_hdd" /> HDD</label>
      <label><input type="checkbox" id="supporto_ssd" /> SSD</label>
      <label><input type="checkbox" id="supporto_usb" /> USB</label>
      <label><input type="checkbox" id="supporto_cd" /> CD</label>
      <label><input type="checkbox" id="supporto_microsd" /> SD</label>
      <label><input type="checkbox" id="supporto_altro" /> Altro</label>
    </div>

    <div class="form-actions">
      <button type="submit">Salva Fascicolo</button>
    </div>
  </form>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.23/jspdf.plugin.autotable.min.js"></script>
  <script>
    const form = document.getElementById('fascicoloForm');
    const tableBody = document.querySelector('#tabellaFascicoli tbody');
    const searchInput = document.getElementById('searchInput');

    form.addEventListener('submit', function (e) {
      e.preventDefault();
      const numero = document.getElementById('numero').value;
      const operatore = document.getElementById('operatore').value;
      const ufficio = document.getElementById('ufficio').value;
      const oggetto = document.getElementById('oggetto').value;
      const stato = document.getElementById('stato').value;

      const row = document.createElement('tr');
      row.className = stato === 'in arrivo' ? 'stato-in-arrivo' : stato === 'in lavorazione' ? 'stato-in-lavorazione' : 'stato-chiuso';
      row.innerHTML = `
        <td></td>
        <td>${numero}</td>
        <td>${operatore}</td>
        <td>${ufficio}</td>
        <td>${oggetto}</td>
        <td>${stato}</td>
        <td>-</td>
        <td>-</td>
        <td>-</td>
        <td class="actions"><button onclick="this.closest('tr').remove()">Elimina</button></td>
      `;
      tableBody.appendChild(row);
      salvaDatiBackend();
      form.reset();
    });

    searchInput.addEventListener('input', () => {
      const value = searchInput.value.toLowerCase();
      Array.from(tableBody.rows).forEach(row => {
        row.style.display = [...row.cells].some(td => td.textContent.toLowerCase().includes(value)) ? '' : 'none';
      });
    });

    function exportTable(type) {
      if (type === 'csv') {
        let csv = '';
        const rows = document.querySelectorAll("table tr");
        for (let row of rows) {
          const cols = row.querySelectorAll("td, th");
          const data = Array.from(cols).map(td => `"${td.textContent}"`).join(',');
          csv += data + "\n";
        }
        const blob = new Blob([csv], { type: 'text/csv' });
        const link = document.createElement('a');
        link.href = URL.createObjectURL(blob);
        link.download = 'fascicoli.csv';
        link.click();
      } else if (type === 'pdf') {
        const { jsPDF } = window.jspdf;
        const doc = new jsPDF();
        doc.text("Fascicoli", 10, 10);
        doc.autoTable({ html: '#tabellaFascicoli' });
        doc.save("fascicoli.pdf");
      }
    }

    function salvaDatiBackend() {
      const dati = Array.from(tableBody.rows).map(row => {
        return {
          numero: row.cells[1].textContent,
          operatore: row.cells[2].textContent,
          ufficio: row.cells[3].textContent,
          oggetto: row.cells[4].textContent,
          stato: row.cells[5].textContent
        };
      });
      fetch('/salva', {
        method: 'POST',
        headers: {'Content-Type': 'application/json'},
        body: JSON.stringify(dati)
      });
    }
  </script>
</body>
</html>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Funzione per recuperare i dati dal server (simulata qui con un array di esempio)
    fetch('/getFascicoli')
      .then(response => response.json())
      .then(data => {
        const tableBody = document.querySelector('#tabellaFascicoli tbody');
        data.forEach(fascicolo => {
          const row = document.createElement('tr');
          row.className = fascicolo.stato === 'in arrivo' ? 'stato-in-arrivo' :
                          fascicolo.stato === 'in lavorazione' ? 'stato-in-lavorazione' :
                          'stato-chiuso';

          row.innerHTML = `
            <td>${fascicolo.progressivo}</td>
            <td>${fascicolo.numero}</td>
            <td>${fascicolo.operatore}</td>
            <td>${fascicolo.ufficio}</td>
            <td>${fascicolo.oggetto}</td>
            <td>${fascicolo.stato}</td>
            <td>${fascicolo.date}</td>
            <td>${fascicolo.reperti}</td>
            <td>${fascicolo.supporti}</td>
            <td class="actions"><button onclick="this.closest('tr').remove()">Elimina</button></td>
          `;
          tableBody.appendChild(row);
        });
      })
      .catch(error => console.error('Errore nel recupero dei dati:', error));
  });
</script>
